class UnitDict:
    length_dict = {
        'эксаметр': 1e18,
        'петаметр': 1e15,
        'тераметр': 1e12,
        'гигаметр': 1e9,
        'мегаметр': 1e6,
        'километр': 1e3,
        'гектометр': 1e2,
        'декаметр': 1e1,
        'метр': 1.0,
        'дециметр': 1e-1,
        'сантиметр': 1e-2,
        'миллиметр': 1e-3,
        'микрометр': 1e-6,
        'нанометр': 1e-9,
        'пикометр': 1e-12,
        'фемтометр': 1e-15,
        'аттометр': 1e-18,

        'точка': 0.254e-3,
        'линия': 2.54e-3,
        'дюйм': 2.54e-2,
        'вершок': 4.445e-2,
        'ладонь': 7.5e-2,
        'пядь': 17.78e-2,
        'фут': 30.48e-2,
        'локоть': 45e-2,
        'шаг': 71e-2,
        'аршин': 71.12e-2,
        'сажень': 2.1336,
        'верста': 1.0668e3,
        'миля': 7.4676e3,

        'твип': 1.76388888e-9,
        'мил': 25.4e-6,
        'точка (сша)': 352.778e-6,
        'дюйм (сша)': 25.4e-3,
        'фут (сша)': 0.3048,
        'ярд': 0.9144,
        'миля (сша)': 1.609344e3,
        'звено': 20.117e-2,
        'род': 5.029,
        'чейн': 20.116,
        'фурлонг': 201.168,
        'лига': 4.828e3,
        'морская сажень': 1.8288,
        'кабельтов': 0.219456e3,
        'морская миля': 1.852e3
    }
    volume_dict = {
        'эксалитр': 1e18,
        'петалитр': 1e15,
        'тералитр': 1e12,
        'гигалитр': 1e9,
        'мегалитр': 1e6,
        'килолитр': 1e3,
        'гектолитр': 1e2,
        'декалитр': 1e1,
        'литр': 1.0,
        'децилитр': 1e-1,
        'сантилитр': 1e-2,
        'миллилитр': 1e-3,
        'микролитр': 1e-6,
        'нанолитр': 1e-9,
        'пиколитр': 1e-12,
        'фемтолитр': 1e-15,
        'аттолитр': 1e-18,

        'часть': 109.33e-3,
        'кружка': 1.312,
        'гарнец': 3.279842,
        'ведро': 13.12,
        'четверик': 26.239,
        'осьмина': 104.955,
        'четверть': 209.91,
        'шкалик': 61.5e3,
        'косушка': 61.5e3,
        'чарка': 123e3,
        'штоф': 1.23,
        'бочка': 491.98,

        'миним': 61.611519921875e-6,
        'жидкий драм': 3.6966911953125e-3,
        'чайная ложка': 4.92892159375e-3,
        'столовая ложка': 14.78676478125e-3,
        'жидкая унция': 29.5735295625e-3,
        'шот': 44.36029434375e-3,
        'джилл': 118.29411825e-3,
        'кружка (сша)': 236.5882365e-3,
        'пинта': 473.176473e-3,
        'кварт': 0.946352946,
        'поттл': 1.892705892,
        'галлон': 3.785411784,
        'баррель': 119.240471196,
        'хогсхед': 238.480942392
    }
    mass_dict = {
        'эксаграмм': 1e18,
        'петаграмм': 1e15,
        'тераграмм': 1e12,
        'гигаграмм': 1e9,
        'мегаграмм': 1e6,
        'килограмм': 1e3,
        'гектограмм': 1e2,
        'декаграмм': 1e1,
        'грамм': 1.0,
        'дециграмм': 1e-1,
        'сантиграмм': 1e-2,
        'миллиграмм': 1e-3,
        'микрограмм': 1e-6,
        'нанограмм': 1e-9,
        'пикограмм': 1e-12,
        'фемтограмм': 1e-15,
        'аттограмм': 1e-18,

        'доля': 44.435e-3,
        'золотник': 4.26580,
        'лот': 12.7974,
        'фунт': 409.51718,
        'пуд': 16.3807e3,
        'берковец': 163.807e3,
        'гран': 62.210e-3,
        'скрупул': 1.2442,
        'драхма': 3.7326,
        'унция': 29.861,

        'гран (сша)': 64.79891e-3,
        'драм': 1.7718451953125,
        'унция (сша)': 28.349523125,
        'фунт (сша)': 453.59237,
        'хандредвейт': 45.359237e3,
        'длинный хандредвейт': 50.80234544e3,
        'тон': 907.18474e3,
        'длинный тон': 1016.0469088e3,
        'пенни': 1.55517384,
        'тройский гран': 64.79891e-3,
        'тройская унция': 31.1034768,
        'тройский фунт': 373.2417216
    }


class Converter:
    @staticmethod
    def is_mode(mode):
        match mode.lower():
            case "длина":
                return True
            case "объём":
                return True
            case "масса":
                return True
            case _:
                return False

    @staticmethod
    def is_unit_of_mode(mode, unit):
        match mode.lower():
            case "длина":
                return unit.lower() in UnitDict.length_dict
            case "объём":
                return unit.lower() in UnitDict.volume_dict
            case "масса":
                return unit.lower() in UnitDict.mass_dict
            case _:
                return False

    @staticmethod
    def is_float_in_string(string):
        try:
            float(string)
            return True
        except ValueError:
            return False

    @staticmethod
    def convert(mode, unit1, unit2, value):
        if Converter.is_mode(mode) and Converter.is_unit_of_mode(mode, unit1) and Converter.is_float_in_string(
                value) and Converter.is_unit_of_mode(mode, unit2):
            match mode.lower():
                case "длина":
                    return round(
                        (float(value) * UnitDict.length_dict[unit1.lower()]) / (UnitDict.length_dict[unit2.lower()]),
                        11)
                case "объём":
                    return round(
                        (float(value) * UnitDict.volume_dict[unit1.lower()]) / (UnitDict.volume_dict[unit2.lower()]),
                        11)
                case "масса":
                    return round(
                        (float(value) * UnitDict.mass_dict[unit1.lower()]) / (UnitDict.mass_dict[unit2.lower()]),
                        11)
                case _:
                    return None
        else:
            return None


if __name__ == '__main__':
    while True:
        mode = input("Какие единицы измерения конвертировать? (Длина, объем, масса)\n")
        if not Converter.is_mode(mode):
            print("Неправильный режим")
        else:
            unit1 = input("Из какой единицы измерения конвертирвать? (Единственное число, именительный падеж)\n")
            if not Converter.is_unit_of_mode(mode, unit1):
                print("В данном режиме нет такой единицы измерения")
            else:
                unit2 = input("В какую единицу измерения конвертирвать? (Единственное число, именительный падеж)\n")
                if not Converter.is_unit_of_mode(mode, unit2):
                    print("В данном режиме нет такой единицы измерения")
                else:
                    value = input("Значение:\n")
                    if not Converter.is_float_in_string(value):
                        print("Вы ввели не число")
                    else:
                        print("Результат перевода {0} {1} в {2} = {3}".format(value, unit1, unit2,
                                                                              Converter.convert(mode, unit1, unit2,
                                                                                                value)))
        choice = input("Конвертировать снова - Y/y/Д/д, выход - любой другой символ\n")
        if choice.lower() == "y" or choice.lower() == "д":
            pass
        else:
            break
